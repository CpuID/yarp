{"name":"Yarp","tagline":"Yet Another Rubygems Proxy","body":"## Yet Another Rubygems Proxy\r\n\r\n> Yarp is a small [Sinatra](http://www.sinatrarb.com) app that makes your [bundler](http://bundler.io) faster.\r\n> You'll love it if you deploy a lot.\r\n\r\nOn a medium-size application with 34 direct gems dependencies, running `bundle install` takes me:\r\n\r\n- Without Yarp: 18.5 seconds\r\n- With Yarp: 10.0 seconds\r\n\r\nThats a 45% percent win right there. 8 seconds shaved of my deploy times.\r\nIf you deploy 20 times a day to your staging environments and 5 times a day to production, you're getting 15 minutes of your life back every week. Make those count!\r\n\r\n\r\n### Installation and usage\r\n\r\nDeploy your own Yarp or use the one at `yarp.io`.\r\n\r\nJust replace this line on top of your Gemfile:\r\n\r\n    source 'http://rubygems.org'\r\n\r\nBy this one:\r\n\r\n    source 'http://us.yarp.io'\r\n\r\nOr if you're in Europe:\r\n\r\n    source 'http://eu.yarp.io'\r\n\r\n\r\n### How it works & Caveats\r\n\r\nYarp caches calls to Rubygem's dependency API, for 24 hours if using `yarp.io`. It redirects all other calls to Rubygems directly.\r\n\r\nThis means that when gems get released or updated, you'll lag a day behind.\r\n\r\nIt also means that _downloading_ the gems themselves is not sped upâ€”they're cached in Rubygem's CDN anyways.\r\n\r\n\r\n### Running locally\r\n\r\nCheckout, make sure you have a [Memcache]() running, configure `.env`, and\r\n\r\n    $ bundle exec foreman run rackup\r\n\r\nWhen developping (by default) cache expires after 1 minute.\r\n\r\n\r\n### License\r\n\r\nYarp is released under the MIT licence.\r\nCopyright (c) 2013 HouseTrip Ltd.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}